{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Curso React\\\\Tests\\\\Next_test\\\\pages\\\\crear-cuenta.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layaout from '../components/Layaout/layaout';\nimport firebase from '../firebase'; //validaciones\n\nimport useValidacion from '../hooks/useValidacion';\nimport validarCrearCuenta from '../validacion/validarCrearCuenta'; // State Inicial\n\nvar STATE_INICIAL = {\n  nombre: 'Alejandro',\n  email: '1245g@mail.com',\n  password: '6489710'\n};\n\nvar crearCuenta = function crearCuenta() {\n  //\n  var _useValidacion = useValidacion(STATE_INICIAL, validarCrearCuenta, crearCuenta),\n      valores = _useValidacion.valores,\n      errores = _useValidacion.errores,\n      submitForm = _useValidacion.submitForm,\n      handleChange = _useValidacion.handleChange,\n      handleSubmit = _useValidacion.handleSubmit;\n\n  var nombre = valores.nombre,\n      email = valores.email,\n      password = valores.password;\n\n  function crearCuenta() {\n    return _regeneratorRuntime.async(function crearCuenta$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('creaando cuenta...');\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.registrar(nombre, email, password));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            console.error('Hubo un error al crear el usuario', _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 6]], Promise);\n  } // funcion que se ejecuta conforme el ususuario escribe en un campo\n\n\n  return __jsx(React.Fragment, null, __jsx(Layaout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Crear Cuenta\")), __jsx(\"div\", {\n    className: \"d-flex flex-row bd-highligh justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Nombre Usurio\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"T\\xF9 usuario\" //value ={nombre}\n    ,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), errores.nombre && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 44\n    }\n  }, errores.nombre)), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Email address\"), __jsx(\"input\", {\n    type: \"e-mail\",\n    className: \"form-control\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }), errores.email && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 43\n    }\n  }, errores.email), __jsx(\"small\", {\n    id: \"emailHelp\",\n    className: \"form-text text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"We'll never share your email with anyone else.\")), __jsx(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Clave\",\n    value: password,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), errores.password && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 47\n    }\n  }, errores.password)), __jsx(\"button\", {\n    type: \"submit\",\n    value: \"crear cuenta\",\n    className: \"btn btn-primary \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Crear\"))));\n};\n\nexport default crearCuenta;","map":{"version":3,"sources":["D:/Curso React/Tests/Next_test/pages/crear-cuenta.jsx"],"names":["React","Layaout","firebase","useValidacion","validarCrearCuenta","STATE_INICIAL","nombre","email","password","crearCuenta","valores","errores","submitForm","handleChange","handleSubmit","console","log","registrar","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B,C,CACA;;AACA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,WADU;AAElBC,EAAAA,KAAK,EAAE,gBAFW;AAGlBC,EAAAA,QAAQ,EAAE;AAHQ,CAAtB;;AAOA,IAAMC,WAAW,GAAG,uBAAM;AACtB;AADsB,uBAE8CN,aAAa,CAACE,aAAD,EAAgBD,kBAAhB,EAAoCK,WAApC,CAF3D;AAAA,MAEfC,OAFe,kBAEfA,OAFe;AAAA,MAENC,OAFM,kBAENA,OAFM;AAAA,MAEGC,UAFH,kBAEGA,UAFH;AAAA,MAEeC,YAFf,kBAEeA,YAFf;AAAA,MAE6BC,YAF7B,kBAE6BA,YAF7B;;AAAA,MAGfR,MAHe,GAGYI,OAHZ,CAGfJ,MAHe;AAAA,MAGPC,KAHO,GAGYG,OAHZ,CAGPH,KAHO;AAAA,MAGAC,QAHA,GAGYE,OAHZ,CAGAF,QAHA;;AAItB,WAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AACIM,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AADJ;AAAA;AAAA,6CAGcd,QAAQ,CAACe,SAAT,CAAmBX,MAAnB,EAA2BC,KAA3B,EAAkCC,QAAlC,CAHd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKQO,YAAAA,OAAO,CAACG,KAAR,CAAc,mCAAd;;AALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJsB,CAYtB;;;AACA,SACI,4BACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAIJ,YADhB;AAEI,IAAA,UAAU,MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAII,IAAA,WAAW,EAAC,eAJhB,CAKI;AALJ;AAMI,IAAA,QAAQ,EAAGD,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUKF,OAAO,CAACL,MAAR,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIK,OAAO,CAACL,MAAZ,CAVvB,CAJJ,EAgBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAII,IAAA,WAAW,EAAC,aAJhB;AAKI,IAAA,KAAK,EAAGC,KALZ;AAMI,IAAA,QAAQ,EAAGM,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUKF,OAAO,CAACJ,KAAR,IAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,OAAO,CAACJ,KAAZ,CAVtB,EAWI;AACA,IAAA,EAAE,EAAC,WADH;AAEA,IAAA,SAAS,EAAC,sBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAXJ,CAhBJ,EAgCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAII,IAAA,WAAW,EAAC,OAJhB;AAKI,IAAA,KAAK,EAAGC,QALZ;AAMI,IAAA,QAAQ,EAAGK,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUMF,OAAO,CAACH,QAAR,IAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,OAAO,CAACH,QAAZ,CAV1B,CAhCJ,EA6CI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAE,cAFX;AAGI,IAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA7CJ,CADJ,CAJJ,CADJ;AA6DH,CA1ED;;AA4EA,eAAeC,WAAf","sourcesContent":["import React from 'react';\r\nimport Layaout from '../components/Layaout/layaout'\r\n\r\nimport firebase from '../firebase';\r\n//validaciones\r\nimport useValidacion from '../hooks/useValidacion'\r\nimport validarCrearCuenta from '../validacion/validarCrearCuenta'\r\n// State Inicial\r\nconst STATE_INICIAL = {\r\n    nombre: 'Alejandro',\r\n    email: '1245g@mail.com',\r\n    password: '6489710',\r\n}\r\n\r\n\r\nconst crearCuenta = () => {\r\n    //\r\n    const {valores, errores, submitForm, handleChange, handleSubmit,} = useValidacion(STATE_INICIAL, validarCrearCuenta, crearCuenta)\r\n    const {nombre, email, password} = valores;\r\n    async function crearCuenta(){\r\n        console.log('creaando cuenta...')\r\n        try{    \r\n            await firebase.registrar(nombre, email, password);\r\n        }catch(error){\r\n            console.error('Hubo un error al crear el usuario', error);\r\n        }\r\n    }\r\n    // funcion que se ejecuta conforme el ususuario escribe en un campo\r\n    return ( \r\n        <>\r\n            <Layaout>\r\n                <h2>Crear Cuenta</h2>\r\n            </Layaout>\r\n            <div className=\"d-flex flex-row bd-highligh justify-content-center\">\r\n                <form \r\n                    onSubmit = {handleSubmit}\r\n                    noValidate\r\n                >\r\n                    <div className=\"form-group\">\r\n                        <label >Nombre Usurio</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            \r\n                            placeholder=\"Tù usuario\"\r\n                            //value ={nombre}\r\n                            onChange ={handleChange}\r\n                        />\r\n                        {errores.nombre && <p>{errores.nombre}</p>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Email address</label>\r\n                        <input \r\n                            type=\"e-mail\" \r\n                            className=\"form-control\" \r\n                            \r\n                            placeholder=\"Enter email\"\r\n                            value ={email}\r\n                            onChange ={handleChange}\r\n                        />\r\n                        {errores.email && <p>{errores.email}</p>}\r\n                        <small \r\n                        id=\"emailHelp\" \r\n                        className=\"form-text text-muted\"\r\n                        >We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Password</label>\r\n                        <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            \r\n                            placeholder=\"Clave\"\r\n                            value ={password}\r\n                            onChange ={handleChange}\r\n                        />\r\n                         {errores.password && <p>{errores.password}</p>}  \r\n                    </div>\r\n\r\n                    <button \r\n                        type=\"submit\" \r\n                        value= \"crear cuenta\"\r\n                        className=\"btn btn-primary \"\r\n                        >Crear</button>\r\n                </form>\r\n            </div>\r\n            \r\n        </>\r\n     );\r\n}\r\n \r\nexport default crearCuenta\r\n"]},"metadata":{},"sourceType":"module"}