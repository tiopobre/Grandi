{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from './config';\n\nvar Firebase = /*#__PURE__*/function () {\n  function Firebase() {\n    _classCallCheck(this, Firebase);\n\n    if (!app.apps.length) {\n      app.initializeApp(firebaseConfig);\n    }\n\n    this.auth = app.auth();\n  } //************************************************************* \n  //***************** Funciones de Firebase ********************* \n  //************************************************************* \n  //Registrar usuario E-mai Contraseña\n\n\n  _createClass(Firebase, [{\n    key: \"registrar\",\n    value: function registrar(nomber, email, password) {\n      var nuevoUsuario;\n      return _regeneratorRuntime.async(function registrar$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.auth.createUserWithEmailAndPassword(email, password));\n\n            case 2:\n              nuevoUsuario = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(nuevoUsuario.user.updateProfile({\n                displayName: nombre\n              }));\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return Firebase;\n}();\n\nvar firebase = new Firebase();\nexport default firebase;","map":{"version":3,"sources":["D:/Curso React/Tests/Next_test/firebase/firebase.js"],"names":["app","firebaseConfig","Firebase","apps","length","initializeApp","auth","nomber","email","password","createUserWithEmailAndPassword","nuevoUsuario","user","updateProfile","displayName","nombre","firebase"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAM,eAAN;AACA,OAAOC,cAAP,MAA2B,UAA3B;;IAEMC,Q;AACF,sBAAa;AAAA;;AACT,QAAG,CAACF,GAAG,CAACG,IAAJ,CAASC,MAAb,EAAoB;AAChBJ,MAAAA,GAAG,CAACK,aAAJ,CAAkBJ,cAAlB;AACH;;AACD,SAAKK,IAAL,GAAYN,GAAG,CAACM,IAAJ,EAAZ;AACH,G,CAED;AACA;AACA;AAEA;;;;;8BACgBC,M,EAASC,K,EAAOC,Q;;;;;;;+CACA,KAAKH,IAAL,CAAUI,8BAAV,CAAyCF,KAAzC,EAAgDC,QAAhD,C;;;AAArBE,cAAAA,Y;;+CACMA,YAAY,CAACC,IAAb,CAAkBC,aAAlB,CAAgC;AAACC,gBAAAA,WAAW,EAAGC;AAAf,eAAhC,C;;;;;;;;;;;;;;;;;AAKrB,IAAMC,QAAQ,GAAG,IAAId,QAAJ,EAAjB;AAEA,eAAec,QAAf","sourcesContent":["import app from 'firebase/app';\r\nimport'firebase/auth';\r\nimport firebaseConfig from './config'\r\n\r\nclass Firebase{\r\n    constructor(){\r\n        if(!app.apps.length){\r\n            app.initializeApp(firebaseConfig)\r\n        }\r\n        this.auth = app.auth();\r\n    }\r\n\r\n    //************************************************************* \r\n    //***************** Funciones de Firebase ********************* \r\n    //************************************************************* \r\n\r\n    //Registrar usuario E-mai Contraseña\r\n    async registrar(nomber , email, password){\r\n        const  nuevoUsuario = await this.auth.createUserWithEmailAndPassword(email, password);\r\n        return await nuevoUsuario.user.updateProfile({displayName : nombre})\r\n    }\r\n\r\n}\r\n\r\nconst firebase = new Firebase();\r\n\r\nexport default firebase;\r\n\r\n"]},"metadata":{},"sourceType":"module"}