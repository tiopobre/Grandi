{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Daniel Serrano\\\\Documents\\\\Grandi\\\\pages\\\\perfil.jsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react'; //firebase\n\nimport { FirebaseContext } from '../../firebase'; // context\n\nvar Perfil = function Perfil() {\n  var _useState = useState([]),\n      plantas = _useState[0],\n      setPlantas = _useState[1];\n\n  var _useContext = useContext(FirebaseContext),\n      firebase = _useContext.firebase;\n\n  useEffect(function () {\n    var obtenerPlantas = function obtenerPlantas() {\n      firebase.db.collection('plantas').where(\"medicinales\", '==', true).onSnapshot(manejarSnapShot);\n    };\n\n    obtenerPlantas();\n  }, []); // funcion que manipula el snapshot\n\n  function manejarSnapShot(snapshot) {\n    var plantas = snapshot.docs.map(function (doc) {\n      return _objectSpread({\n        id: doc.id\n      }, doc.data());\n    }); // enviar el resultado de la conultaal state\n\n    setPlantas(plantas);\n    console.log(plantas);\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Perfil;","map":{"version":3,"sources":["C:/Users/Daniel Serrano/Documents/Grandi/pages/perfil.jsx"],"names":["React","useState","useContext","useEffect","FirebaseContext","Perfil","plantas","setPlantas","firebase","obtenerPlantas","db","collection","where","onSnapshot","manejarSnapShot","snapshot","docs","map","doc","id","data","console","log"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD,C,CAEA;;AACA,SAAQC,eAAR,QAA8B,gBAA9B,C,CAA+C;;AAE/C,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA,MACZK,OADY;AAAA,MACHC,UADG;;AAAA,oBAEAL,UAAU,CAACE,eAAD,CAFV;AAAA,MAEZI,QAFY,eAEZA,QAFY;;AAGnBL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMM,cAAc,GAAG,SAAjBA,cAAiB,GAAK;AACxBD,MAAAA,QAAQ,CAACE,EAAT,CAAYC,UAAZ,CAAuB,SAAvB,EAAkCC,KAAlC,CAAwC,aAAxC,EAAuD,IAAvD,EAA6D,IAA7D,EAAmEC,UAAnE,CAA8EC,eAA9E;AACH,KAFD;;AAGCL,IAAAA,cAAc;AAChB,GALQ,EAKN,EALM,CAAT,CAHmB,CASnB;;AACA,WAASK,eAAT,CAA0BC,QAA1B,EAAmC;AACjC,QAAMT,OAAO,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;AACvC;AACEC,QAAAA,EAAE,EAAED,GAAG,CAACC;AADV,SAEKD,GAAG,CAACE,IAAJ,EAFL;AAID,KALe,CAAhB,CADiC,CAOjC;;AACAb,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACD;;AAEC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH,CA5BD;;AA8BA,eAAeD,MAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\n\r\n//firebase\r\nimport {FirebaseContext} from '../../firebase' // context\r\n\r\nconst Perfil = () => {\r\n  const [plantas, setPlantas] = useState([]);\r\n  const {firebase} = useContext(FirebaseContext);\r\n  useEffect(() => {\r\n    const obtenerPlantas = () =>{\r\n        firebase.db.collection('plantas').where(\"medicinales\", '==', true).onSnapshot(manejarSnapShot);\r\n    }\r\n     obtenerPlantas();\r\n  }, []);\r\n  // funcion que manipula el snapshot\r\n  function manejarSnapShot (snapshot){\r\n    const plantas = snapshot.docs.map(doc => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data()\r\n      };\r\n    });\r\n    // enviar el resultado de la conultaal state\r\n    setPlantas(plantas);\r\n    console.log(plantas);\r\n  }\r\n\r\n    return (\r\n        <div>  \r\n         \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Perfil"]},"metadata":{},"sourceType":"module"}