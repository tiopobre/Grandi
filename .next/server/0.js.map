{"version":3,"file":"0.js","sources":["webpack:///./hooks/useValidacion.jsx","webpack:///./pages/login.jsx","webpack:///./validacion/validarLogin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst useValidacion = (stateInicial, validar, fn) => {\r\n    \r\n    const [valores, setValores] = useState(stateInicial)\r\n    const [errores, setErrores] = useState({});\r\n    const [submitForm, setSubmitForm] = useState(false);\r\n    // Funcion que escucha \r\n    useEffect(() =>{\r\n        if(submitForm){\r\n            const noErrores = Object.keys(errores).length ===0;\r\n            if(noErrores){\r\n                fn(); //Funcion que se ejecuta en el componente dependiendo del formulario\r\n            }\r\n            setSubmitForm (false);\r\n        }\r\n    }, [errores]);\r\n    // Funcion que se ejecuta cuando el usuraio escribe\r\n    const handleChange= e =>{\r\n        console.log('state', valores)\r\n        setValores({\r\n            ...valores,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    // Funcion que se ejecutara con el submit\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const erroresValidacion = validar(valores)\r\n        setErrores(erroresValidacion);\r\n        setSubmitForm(true);\r\n    }\r\n\r\n    return {\r\n        valores,\r\n        errores,\r\n        handleChange,\r\n        handleSubmit,\r\n    };\r\n}\r\n \r\nexport default useValidacion;","import React, { useState } from 'react';\r\nimport Layaout from '../components/Layaout/layaout'\r\n\r\nimport Router from 'next/router'\r\nimport firebase from '../firebase';\r\n//validaciones\r\nimport useValidacion from '../hooks/useValidacion'\r\nimport validarLogin from '../validacion/validarLogin'\r\n// State Inicial\r\nconst STATE_INICIAL = {\r\n    email: '',\r\n    password: ''\r\n}\r\n\r\nconst Login = () => {\r\n    const {valores, errores, handleChange, handleSubmit,} =  useValidacion(STATE_INICIAL, validarLogin, iniciasSesion)\r\n    const {email, password} = valores;\r\n\r\n    async function iniciasSesion (){\r\n        try {\r\n            await firebase.login(email,password);\r\n            Router.push('/');\r\n        } catch (error) {\r\n            console.error('Hubo un error al autenticar', error.message);\r\n            //guardarError\r\n        }\r\n    }\r\n    return (\r\n        <Layaout>\r\n      <div className=\"container\">\r\n        <div className=\"card card-container login\">\r\n          <img id=\"profile-img\" className=\"profile-img-card\" src=\"static/imgs/LOGO_GRANDI.png\" />\r\n          <p id=\"profile-name\" className=\"profile-name-card\" />\r\n          \r\n          <form \r\n          className=\"form-signin\"\r\n          onSubmit = {handleSubmit}\r\n          >\r\n            <span \r\n            id=\"reauth-email\" \r\n            className=\"reauth-email\" />\r\n            \r\n            <input \r\n                name = \"email\"\r\n                type=\"email\" \r\n                id=\"inputEmail\" \r\n                className=\"form-control\" \r\n                placeholder=\"e-mail\" \r\n                required autoFocus\r\n\r\n                value ={email}\r\n                onChange ={handleChange}\r\n            />\r\n            {errores.email && <p>{errores.email}</p>}\r\n            <input \r\n                name = \"password\"\r\n                type=\"password\" \r\n                id=\"inputPassword\" \r\n                className=\"form-control\" \r\n                placeholder=\"ContraseÃ±a\" \r\n                required autoFocus\r\n\r\n                value ={password}\r\n                onChange ={handleChange}\r\n            />\r\n           {errores.email && <p>{errores.password}</p>}\r\n            <button \r\n                className=\"btn btn-lg btn-primary btn-block btn-signin\" \r\n                type=\"submit\" \r\n                value= \"login\"\r\n            >Ingresar</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      </Layaout>\r\n    )\r\n}\r\n\r\nexport default Login","export default function validarCrearCuenta(valores){\r\n    let errores = {};\r\n\r\n    // validar el e-mail de usuario\r\n    if(!valores.email){\r\n        errores.email = \"El e-mail es obligtorio\"\r\n    }\r\n    else if(!/^[A-Z0-9._%+-]+@[A-Z-9.-]+\\.[A-Z]{2,}$/i.test(valores.email)){\r\n        errores.email = \"El e-mail no es valido\"\r\n    }\r\n\r\n    // validar el password\r\n    if(!valores.password){\r\n        errores.password = \"El Password es obligtorio\"\r\n    }\r\n    return errores;\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;;;;;;;;;AC9EA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}